AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  cloud-resume-challenge

  Sample SAM Template for cloud-resume-challenge

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    MemorySize: 128

Parameters:
  DomainName:
    Type: String
    Default: "devodriqroberts.com"
  DynamoDBTableName:
    Type: String
    Default: "cloud-resume-challenge"

Resources:
  CloudResumeChallengeWebsite:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: cloud-resume-challenge-2023
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false
      WebsiteConfiguration:
        IndexDocument: index.html

  CloudResumeChallengeRoute53Record:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: Z05098842II2E0776MPUB
      RecordSets:
        - Name: !Ref "DomainName"
          Type: A
          AliasTarget:
            HostedZoneId: Z2FDTNDATAQYW2
            DNSName: !GetAtt CloudResumeChallengeDistribution.DomainName

  CloudResumeChallengeCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref "DomainName"
      ValidationMethod: DNS

  CloudResumeChallengeDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        ViewerCertificate:
          AcmCertificateArn: !Ref CloudResumeChallengeCertificate
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2021
        Aliases:
          - !Ref "DomainName"
        DefaultCacheBehavior:
          ViewerProtocolPolicy: redirect-to-https #allow-all
          TargetOriginId: cloud-resume-challenge-2023.s3-website-us-east-1.amazonaws.com
          DefaultTTL: 0
          MinTTL: 0
          MaxTTL: 0
          ForwardedValues:
            QueryString: false
        Origins:
          - DomainName: cloud-resume-challenge-2023.s3-website-us-east-1.amazonaws.com
            Id: cloud-resume-challenge-2023.s3-website-us-east-1.amazonaws.com
            CustomOriginConfig:
              OriginProtocolPolicy: http-only
        Enabled: "true"
        DefaultRootObject: index.html
        HttpVersion: http2and3

  ProductBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref CloudResumeChallengeWebsite
      PolicyDocument:
        Id: PublicReadPolicy
        Version: 2012-10-17
        Statement:
          - Sid: PublicReadForGetBucketObjects
            Effect: Allow
            Principal: "*"
            Action: "s3:GetObject"
            Resource: !Sub arn:aws:s3:::${CloudResumeChallengeWebsite}/*

  CloudResumeChallengeGetVisitorCountFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: src/handlers/get_visitors.lambda_handler
      Runtime: python3.9
      Description: "Backend for getting site visitors count"
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref "DynamoDBTableName"
      Architectures:
        - x86_64
      Events:
        ResumeVisitors:
          Type: Api
          Properties:
            RestApiId: !Ref ResumeViewCountApi
            Path: /get-visitors
            Method: GET

  CloudResumeChallengePutVisitorCountFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./
      Handler: src/handlers/put_visitors.lambda_handler
      Runtime: python3.9
      Description: "Backend for updating site visitors count"
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref "DynamoDBTableName"
      Architectures:
        - x86_64
      Events:
        ResumeVisitors:
          Type: Api
          Properties:
            RestApiId: !Ref ResumeViewCountApi
            Path: /put-visitors
            Method: PUT

  ResumeViewCountApi:
    Type: AWS::Serverless::Api
    Properties:
      Cors:
        AllowOrigin: "'https://devodriqroberts.com'"
      EndpointConfiguration:
        Type: EDGE
      OpenApiVersion: 3.0.1
      StageName: Prod

  CloudResumeChallengeDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: cloud-resume-challenge
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: "ID"
          AttributeType: "S"
      KeySchema:
        - AttributeName: "ID"
          KeyType: "HASH"

  # DynamoDBPolicy:
  #   Type: AWS::S3::BucketPolicy
  #   Properties:
  #     Bucket: !Ref CloudResumeChallengeWebsite
  #     PolicyDocument:
  #       Id: ReadAndUpdateDynamoDBPolicy
  #       Version: 2012-10-17
  #       Statement:
  #         - Sid: ReadAndUpdateDynamoDBPolicy
  #           Effect: Allow
  #           Principal: [!GetAtt CloudResumeChallengePutVisitorCountFunction.Arn]
  #           Action: [
  #               "dynamodb:BatchGetItem",
  #               "dynamodb:GetItem",
  #               "dynamodb:Query",
  #               "dynamodb:Scan",
  #               "dynamodb:BatchWriteItem",
  #               "dynamodb:PutItem",
  #               "dynamodb:UpdateItem"
  #           ]
  #           Resource: !Sub arn:aws:DynamoDB:::${CloudResumeChallengeWebsite}/*
# Outputs:
#   # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
#   # Find out more about other implicit resources you can reference within SAM
#   # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
#   HelloWorldApi:
#     Description: "API Gateway endpoint URL for Prod stage for Hello World function"
#     Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
#   HelloWorldFunction:
#     Description: "Hello World Lambda Function ARN"
#     Value: !GetAtt HelloWorldFunction.Arn
#   HelloWorldFunctionIamRole:
#     Description: "Implicit IAM Role created for Hello World function"
#     Value: !GetAtt HelloWorldFunctionRole.Arn
